{% if object is not defined %}
    {% set object = form.parent.vars.data %}
{% endif %}



{#<div class="container">#}

    {% include('@Financial/Account/Blocks/nav-tab.html.twig') %}





    <div class="tab-content">
        <div id="tab_all" class="tab-pane fade in active">
            {#1#}
            {% include('@Financial/Account/Blocks/summary_all.html.twig') %}

        </div>
        <div id="tab_earnings" class="tab-pane fade">
            {#1#}
            {% include('@Financial/Account/Blocks/summary_earnings.html.twig') %}

        </div>
        <div id="tab_expenditures" class="tab-pane fade">
            {#2#}
            {% include('@Financial/Account/Blocks/summary_expenditures.html.twig') %}
        </div>
        <div id="tab_bills" class="tab-pane fade">
            {#3#}
            {% include('@Financial/Account/Blocks/summary_bills.html.twig') %}
        </div>

    </div>
{#</div>#}




<script>

    function number_format(amount, decimals) {

        amount += ''; // por si pasan un numero en vez de un string
        amount = parseFloat(amount.replace(/[^0-9\.\-]/g, '')); // elimino cualquier cosa que no sea numero o punto

        decimals = decimals || 0; // por si la variable no fue fue pasada

        // si no es un numero o es igual a cero retorno el mismo cero
        if (isNaN(amount) || amount === 0)
            return parseFloat(0).toFixed(decimals);

        // si es mayor o menor que cero retorno el valor formateado como numero
        amount = '' + amount.toFixed(decimals);

        var amount_parts = amount.split('.'),
            regexp = /(\d+)(\d{3})/;

        while (regexp.test(amount_parts[0]))
            amount_parts[0] = amount_parts[0].replace(regexp, '$1' + '.' + '$2');

        return amount_parts.join(',');
    }


    $(function () {
        $('#table-summary-all').DataTable(
            {
                "order": [[5, "desc"]],
                dom: 'Bfrtip',
                "paging": false,
                "pageLength": 100
            }
        );

        $('#table-summary-earnings').DataTable(
            {
                "order": [[5, "desc"]],
                dom: 'Bfrtip',
                "pageLength": 100
            }
        );

        $('#table-summary-expenditures').DataTable(
            {
                "order": [[2, "desc"]],
                dom: 'Bfrtip',
                "pageLength": 100
            }
        );
        $('#table-summary-bills').DataTable(
            {
                "order": [[0, "asc"],[2, "desc"]],
                dom: 'Bfrtip',
                "pageLength": 100
            }
        );


        var balance = {{ object.balance }};
//        var balance = 0;
        var cont = 0;

        var balances = $('.balance');
        $('.total').each(function(){

            var tmp = $(this).html();
            tmp = tmp.replace(".","")
            tmp = tmp.replace(",",".")
            var total = parseFloat(tmp);
//            balance = balance - total;
//            console.log(balances[cont]);

//            balances[cont].innerHTML = (balance - total) +" => "+ balance;
            balances[cont].innerHTML = number_format(balance, 2);
            balance = balance - total;
            cont = cont +1 ;
//            var cell = balances[cont];
//
//            cell.html(balance);
        })
//        $

    });
</script>


